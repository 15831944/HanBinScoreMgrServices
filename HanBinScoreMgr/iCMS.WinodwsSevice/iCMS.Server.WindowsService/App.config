<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <unity>
    <containers>
      <container name="defaultContainer">
        <!--业务的处理的依赖注入-->
        <register type="iCMS.Service.Web.WirelessDevicesConfig.IWirelessDevicesConfigManager, iCMS.Service.Web"
                  mapTo="iCMS.Service.Web.WirelessDevicesConfig.WirelessDevicesConfigManager, iCMS.Service.Web" >
        </register>
        <register type="iCMS.Service.Web.DevicesConfig.IDevicesConfigManager, iCMS.Service.Web"
                  mapTo ="iCMS.Service.Web.DevicesConfig.DevicesConfigManager, iCMS.Service.Web">
        </register>
        <register type="iCMS.Service.Web.DiagnosticAnalysis.IDiagnosticAnalysisManager, iCMS.Service.Web"
                  mapTo ="iCMS.Service.Web.DiagnosticAnalysis.DiagnosticAnalysisManager, iCMS.Service.Web">
        </register>
        <register type="iCMS.Service.Web.SystemInitSets.ISystemInitManager, iCMS.Service.Web"
                  mapTo ="iCMS.Service.Web.SystemInitSets.SystemInitSetsManager, iCMS.Service.Web">
        </register>
        <register type="iCMS.Service.DiagnosticControl.IDiagnosticControlManager, iCMS.Service.DiagnosticControl"
                  mapTo ="iCMS.Service.DiagnosticControl.DiagnosticControlManager, iCMS.Service.DiagnosticControl">
        </register>
        <register type="iCMS.Service.Web.Statistics.IStatisticsManager, iCMS.Service.Web"
                  mapTo ="iCMS.Service.Web.Statistics.StatisticsManager, iCMS.Service.Web">
        </register>
        <register type="iCMS.Service.Web.SystemManager.IUserManager, iCMS.Service.Web"
                  mapTo ="iCMS.Service.Web.SystemManager.UserManager, iCMS.Service.Web">
        </register>
        <register type="iCMS.Service.Web.SystemManager.IRoleManager, iCMS.Service.Web"
                  mapTo ="iCMS.Service.Web.SystemManager.RoleManager, iCMS.Service.Web">
        </register>
        <register type="iCMS.Service.Web.SystemManager.ILogManager, iCMS.Service.Web"
                  mapTo ="iCMS.Service.Web.SystemManager.LogManager, iCMS.Service.Web">
        </register>
        <register type="iCMS.Service.Web.Utility.IUtilityManager, iCMS.Service.Web"
                  mapTo ="iCMS.Service.Web.Utility.UtilityManager, iCMS.Service.Web">
        </register>
        <register type="iCMS.Service.WirelessSensors.ISensorsConfigManager, iCMS.Service.WirelessSensors"
                  mapTo ="iCMS.Service.WirelessSensors.SensorsConfigManager, iCMS.Service.WirelessSensors">
        </register>
        <register type="iCMS.Service.WirelessSensors.ISensorsInfoManager, iCMS.Service.WirelessSensors"
                  mapTo ="iCMS.Service.WirelessSensors.SensorsInfoManager, iCMS.Service.WirelessSensors">
        </register>
        <register type="iCMS.Service.WirelessSensors.IDealWithUpLoadDataManager, iCMS.Service.WirelessSensors"
                  mapTo ="iCMS.Service.WirelessSensors.DealWithUpLoadDataManager, iCMS.Service.WirelessSensors">
        </register>
        <register type="iCMS.Service.Cloud.ICloudManager, iCMS.Service.Cloud"
                  mapTo ="iCMS.Service.Cloud.CloudManager, iCMS.Service.Cloud">
        </register>
        <register type="iCMS.Service.Web.DAUService.IDAUManager, iCMS.Service.Web"
                  mapTo ="iCMS.Service.Web.DAUService.DAUManager, iCMS.Service.Web">
        </register>

        <!--泛型构造函数依赖注入，访问数据库-->
        <register type="iCMS.Frameworks.Core.Repository.IRepository`1, iCMS.Frameworks.Core.Repository"
                  mapTo="iCMS.Frameworks.Core.Repository.Repository`1, iCMS.Frameworks.Core.Repository">
        </register>
        <!--函数依赖注入，缓存-->
        <register type="iCMS.Frameworks.Core.Repository.ICacheDICT, iCMS.Frameworks.Core.Repository"
                  mapTo="iCMS.Frameworks.Core.Repository.CacheDICT, iCMS.Frameworks.Core.Repository">
        </register>

        <!--函数依赖注入，分页存储过程-->
        <register type="iCMS.Service.Common.IPaging`1, iCMS.Service.Common"
                  mapTo="iCMS.Service.Common.Paging`1, iCMS.Service.Common">
        </register>

        <!--泛型构造函数依赖注入，初始化数据-->
        <register type="iCMS.Service.Web.IInitializeServer, iCMS.Service.Web"
                  mapTo="iCMS.Service.Web.InitializeServer, iCMS.Service.Web">
        </register>

        <!--属性依赖注入，上传数据配置测量定义-->
        <register type="iCMS.Service.WirelessSensors.IConfigWSMeasureDefine, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.ConfigWSMeasureDefine, iCMS.Service.WirelessSensors">
        </register>

        <!--属性依赖注入，上传数据配置触发式上传-->
        <register type="iCMS.Service.WirelessSensors.IConfigWSUploadTrigger, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.ConfigWSUploadTrigger, iCMS.Service.WirelessSensors">
        </register>

        <!--属性依赖注入，上传数据升级-->
        <register type="iCMS.Service.WirelessSensors.IUpdateWSFirmware, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.UpdateWSFirmware, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，设备停机报警-->
        <register type="iCMS.Service.WirelessSensors.AlarmManager.IDeviceShutdownAlarm, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.AlarmManager.DeviceShutdownAlarm, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，设备温度报警-->
        <register type="iCMS.Service.WirelessSensors.AlarmManager.IDeviceTemperatureAlarm, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.AlarmManager.DeviceTemperatureAlarm, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，无线传感器温度报警-->
        <register type="iCMS.Service.WirelessSensors.AlarmManager.IWSTemperatureAlarm, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.AlarmManager.WSTemperatureAlarm, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，无线传感器电池电压报警-->
        <register type="iCMS.Service.WirelessSensors.AlarmManager.IWSVoltageAlarm, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.AlarmManager.WSVoltageAlarm, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，振动信号报警-->
        <register type="iCMS.Service.WirelessSensors.AlarmManager.IDeviceVibrationAlarm, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.AlarmManager.DeviceVibrationAlarm, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，网关连接报警-->
        <register type="iCMS.Service.WirelessSensors.AlarmManager.IWGLinkedAlarm, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.AlarmManager.WGLinkedAlarm,iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，无线传感器连接报警-->
        <register type="iCMS.Service.WirelessSensors.AlarmManager.IWSLinkedAlarm, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.AlarmManager.WSLinkedAlarm, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，无线传感器温度报警-->
        <register type="iCMS.Service.WirelessSensors.AlarmManager.IWSTemperatureAlarm, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.AlarmManager.WSTemperatureAlarm, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，趋势报警-->
        <register type="iCMS.Service.WirelessSensors.AlarmManager.ITrendAlarmsManager, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.AlarmManager.TrendAlarmsManager, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，上传配置响应数据-->
        <register type="iCMS.Service.WirelessSensors.IUploadData_ConfigResponse, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.UploadData_ConfigResponse, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，上传特征值-->
        <register type="iCMS.Service.WirelessSensors.IUploadData_EigenValue, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.UploadData_EigenValue, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，上传停机数据-->
        <register type="iCMS.Service.WirelessSensors.IUploadData_ShutdownValue, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.UploadData_ShutdownValue, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，上传停机数据-->
        <register type="iCMS.Service.WirelessSensors.IUploadData_Status, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.UploadData_Status, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，上传电池电压和温度数据-->
        <register type="iCMS.Service.WirelessSensors.IUploadData_VolAndTemp, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.UploadData_VolAndTemp, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，上传波形数据-->
        <register type="iCMS.Service.WirelessSensors.IUploadData_Wave, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.UploadData_Wave, iCMS.Service.WirelessSensors">
        </register>
        <!--属性依赖注入，缓存-->
        <register type="iCMS.Common.Component.Tool.ICacheManager, iCMS.Common.Component.Tool"
                  mapTo="iCMS.Common.Component.Tool.MemoryCacheManager, iCMS.Common.Component.Tool">
        </register>

        <register type="iCMS.Service.WirelessSensors.AlarmManager.IGetMonitorTree, iCMS.Service.WirelessSensors"
                  mapTo="iCMS.Service.WirelessSensors.AlarmManager.GetMonitorTree, iCMS.Service.WirelessSensors">
        </register>

        <register type="iCMS.Service.Web.DAUService.DAUAlarmManager.IDeviceVibrationAlarm, iCMS.Service.Web"
                  mapTo="iCMS.Service.Web.DAUService.DAUAlarmManager.DeviceVibrationAlarm, iCMS.Service.Web">
        </register>

        <register type="iCMS.Service.Web.DAUService.DAUAlarmManager.IDeviceTemperatureAlarm, iCMS.Service.Web"
                  mapTo="iCMS.Service.Web.DAUService.DAUAlarmManager.DeviceTemperatureAlarm, iCMS.Service.Web">
        </register>
      </container>
    </containers>
  </unity>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />

    <add key="iCMS" value="JwX+l8BtXQqj7zB/wWj4umqOXeM7LQowqng9PWBONcu/Ihm5NU9tYbcBBtJXaAt030jPEiqqTc9Q7XXuZ4+qAdT5k0LaeEAB/g/nYZBTcrUXpCNjcgp11Pag0BqKhRgzbWNrY4EBBZgpu+XtWSZUmA==" />
    <!--字符串【2017-01-16】-->
    <add key="Key" value="5bcbc178cf70e1ec7ca1586a1eaac1d3" />
    <add key="Secret" value="252a7d7582a39c899de71efa8b6fb368" />
    <add key="CriticalValue" value="2" />
    <add key="CriticalBandWidth" value="1000" />
    <add key="CriticalFilter" value="1000" />
    <add key="CriticalWaveLength" value="1024" />
    <add key="StatusCriticalValue" value="10" />
    <add key="StatusCriticalTime" value="30" />
    <!--存放启停机数据值的路径-->
    <add key="StatusCriticalPath" value="D:\icms160\StatusCritical" />
    <add key="WaveDirectory" value="D:\icms160\WaveDirectory" />
    <add key="AlarmCountRecordPath" value="D:\icms160\AlarmCountRecord" />
    <add key="TrendAlarms" value="0" />
    <add key="BatteryVolatage" value="电池电压" />
    <add key="DeviceTemperature" value="设备温度" />
    <add key="WSTemperature" value="传感器温度" />
    <!--是否推送到云平台标识，1：推送；0：不推送； -->
    <add key="UploadCloudFlag" value="0" />
    <add key="MagicWord" value="538183686" />
    <!--下发测量定义超时时间1分钟-->
    <add key="MeasDefTimeOut" value="1" />
    <!--下发升级超时时间30分钟-->
    <add key="UpdateFirmwareTimeOut" value="30" />
    <!--下发测量定义超时时间1分钟-->
    <add key="UpdateTriggerTimeOut" value="30" />
    <!--压缩日志天数，0：不压缩，其他：压缩间隔天数-->
    <add key="CompressLogDays" value="5" />
    <!--日志删除时间  值为单位：天-->
    <add key="DeleteLogDays" value="30" />
    <add key="DevStartStopFunc" value="DevStartStopFunc" />
    <add key="UploadTrigger" value="UploadTrigger" />
    <add key="AlarmsConfirmed" value="0" />
    <add key="TrendAlarms" value="1" />
    <add key="TrendAlarmsSet" value="0.2" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
    <!--Windows服务配置-->
    <add key="ServiceName" value="iCMS.ServerService" />
    <add key="ServiceDisplayName" value="iCMS.Server" />
    <add key="ServiceDescription" value="西安因联信息科技有限公司iCMS.Server服务 ®V 1.6.0.180126_Beta" />
    <add key="IsSetConifgServer" value="0" />
    <!--是否是同步采集 1:是,0否-->
    <add key="IsSyncCollection" value="0" />

    <!--根据配置的转速保存数据相关 Start-->
    <!--1：表示要使用上传的转速值大于SaveDataSpeedLimit的值保存数据，0：表示使用上传的转速大于0来保存数据-->
    <add key="IsSaveDataSpeedLimit" value="0" />
    <!--当IsSaveDataSpeedLimit=1并且上传的转速大于该配置的转速时保存数据-->
    <add key="SaveDataSpeedLimit" value="100 " />
    <!--根据配置的转速保存数据相关 End-->

    <!--转速波形数据文件存储路径，Added by QXM, 2018/01/13-->
    <add key="SpeedWaveDirectory" value="D:\VibscanPro\WaveDirectory" />

    <!--有线设备波形上传保存条件 开始-->
    <!--有线设备波形和特征值保存时间，单位天-->
    <add key="WiredWaveAndEigenValuePeriod" value="180"/>
    <!--有线设备转速保存时间，单位天-->
    <add key="WiredRotatePeriod" value="180"/>
    <!--有线设备设备温度保存时间，单位天-->
    <add key="WiredDeviceTempePeriod" value="180"/>
    <!--有线设备波形上传保存条件 结束-->
  </appSettings>
  <system.serviceModel>
    <bindings>
      <webHttpBinding>
        <binding name="webBinding" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" maxBufferSize="2147483647" transferMode="Streamed" contentTypeMapper="iCMS.Common.Component.Tool.Extensions.JsonRawMapper,iCMS.Common.Component.Tool.Extensions">
        </binding>
      </webHttpBinding>
    </bindings>
    <services>
      <service name="iCMS.Presentation.Server.WirelessDevicesConfig.WirelessDevicesConfigService" behaviorConfiguration="WirelessDevicesConfigBehavior">
        <endpoint address="" behaviorConfiguration="webBehavior" binding="webHttpBinding" bindingConfiguration="webBinding" contract="iCMS.Presentation.Server.WirelessDevicesConfig.IWirelessDevicesConfigService">
        </endpoint>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:2892/Web/WirelessDevicesConfigService" />
          </baseAddresses>
        </host>
      </service>
      <service name="iCMS.Presentation.Server.SystemInitSets.SystemInitSetsService" behaviorConfiguration="SystemInitSetsServiceBehavior">
        <endpoint address="" behaviorConfiguration="webBehavior" binding="webHttpBinding" bindingConfiguration="webBinding" contract="iCMS.Presentation.Server.SystemInitSets.ISystemInitSetsService">
        </endpoint>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:2892/Web/SystemInitSetsService" />
          </baseAddresses>
        </host>
      </service>
      <service name="iCMS.Presentation.Server.DiagnosticAnalysis.DiagnosticAnalysisService" behaviorConfiguration="DiagnosticAnalysisBehavior">
        <endpoint address="" behaviorConfiguration="webBehavior" binding="webHttpBinding" bindingConfiguration="webBinding" contract="iCMS.Presentation.Server.DiagnosticAnalysis.IDiagnosticAnalysisService">
        </endpoint>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:2892/Web/DiagnosticAnalysisService" />
          </baseAddresses>
        </host>
      </service>
      <service name="iCMS.Presentation.Server.OtherService" behaviorConfiguration="otherServiceBehavior">
        <endpoint address="" behaviorConfiguration="webBehavior" binding="webHttpBinding" bindingConfiguration="webBinding" contract="iCMS.Presentation.Server.IOtherService">
        </endpoint>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:2892/Web/OtherService" />
          </baseAddresses>
        </host>
      </service>
      <service name="iCMS.Presentation.Server.UtilityService" behaviorConfiguration="utilityServiceBehavior">
        <endpoint address="" behaviorConfiguration="webBehavior" binding="webHttpBinding" bindingConfiguration="webBinding" contract="iCMS.Presentation.Server.IUtilityService">
        </endpoint>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:2892/Web/UtilityService" />
          </baseAddresses>
        </host>
      </service>
      <service name="iCMS.Presentation.Server.SystemManager.SystemManagerService" behaviorConfiguration="systemMgrBehavior">
        <endpoint address="" behaviorConfiguration="webBehavior" binding="webHttpBinding" bindingConfiguration="webBinding" contract="iCMS.Presentation.Server.SystemManager.ISystemManagerService">
        </endpoint>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:2892/Web/SystemManagerService" />
          </baseAddresses>
        </host>
      </service>
      <service name="iCMS.Presentation.Server.DevicesConfig.DevicesConfigService" behaviorConfiguration="DevicesConfigBehavior">
        <endpoint address="" behaviorConfiguration="webBehavior" binding="webHttpBinding" bindingConfiguration="webBinding" contract="iCMS.Presentation.Server.DevicesConfig.IDevicesConfigService">
        </endpoint>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:2892/Web/DevicesConfigService" />
          </baseAddresses>
        </host>
      </service>
      <service name="iCMS.Presentation.Server.DiagnosticControl.DiagnosticControlService" behaviorConfiguration="DiagnostiControlBehavior">
        <endpoint address="" behaviorConfiguration="webBehavior" binding="webHttpBinding" bindingConfiguration="webBinding" contract="iCMS.Presentation.Server.DiagnosticControl.IDiagnosticControlService">
        </endpoint>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:2892/DiagnosticControl/DiagnosticControlService" />
          </baseAddresses>
        </host>
      </service>
      <service name="iCMS.Presentation.Server.Statistics.StatisticsService" behaviorConfiguration="StatisticsBehavior">
        <endpoint address="" behaviorConfiguration="webBehavior" binding="webHttpBinding" bindingConfiguration="webBinding" contract="iCMS.Presentation.Server.Statistics.IStatisticsService">
        </endpoint>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:2892/Web/StatisticsService" />
          </baseAddresses>
        </host>
      </service>
      <service name="iCMS.Presentation.Server.WirelessSensors.DoCommandService" behaviorConfiguration="DoCommandBehavior">
        <endpoint address="" behaviorConfiguration="webBehavior" binding="webHttpBinding" bindingConfiguration="webBinding" contract="iCMS.Presentation.Server.WirelessSensors.IDoCommandService">
        </endpoint>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:2892/WirelessSensors/DoCommandService" />
          </baseAddresses>
        </host>
      </service>
      <service name="iCMS.Presentation.Server.WirelessSensors.GetSensorsInfoService" behaviorConfiguration="GetSensorsInfoBehavior">
        <endpoint address="" behaviorConfiguration="webBehavior" binding="webHttpBinding" bindingConfiguration="webBinding" contract="iCMS.Presentation.Server.WirelessSensors.IGetSensorsInfoService">
        </endpoint>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:2892/WirelessSensors/GetSensorsInfoService" />
          </baseAddresses>
        </host>
      </service>
      <service name="iCMS.Presentation.Server.WirelessSensors.UploadDataService" behaviorConfiguration="UploadDataBehavior">
        <endpoint address="" behaviorConfiguration="webBehavior" binding="webHttpBinding" bindingConfiguration="webBinding" contract="iCMS.Presentation.Server.WirelessSensors.IUploadDataService">
        </endpoint>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:2892/WirelessSensors/UploadDataService" />
          </baseAddresses>
        </host>
      </service>
      <service name="iCMS.Presentation.Server.Cloud.CloudService" behaviorConfiguration="CloudBehavior">
        <endpoint address="" behaviorConfiguration="webBehavior" binding="webHttpBinding" bindingConfiguration="webBinding" contract="iCMS.Presentation.Server.Cloud.ICloudService">
        </endpoint>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:2892/cloud/CloudService" />
          </baseAddresses>
        </host>
      </service>
    </services>
    <behaviors>
      <endpointBehaviors>
        <behavior name="webBehavior">
          <!--这里必须设置-->
          <webHttp />
          <newtonsoftJsonBehavior />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="otherServiceBehavior">
        </behavior>
        <behavior name="utilityServiceBehavior">
        </behavior>
        <behavior name="systemMgrBehavior">
        </behavior>
        <behavior name="DevicesConfigBehavior">
        </behavior>
        <behavior name="DiagnostiControlBehavior">
        </behavior>
        <behavior name="StatisticsBehavior">
        </behavior>
        <behavior name="WirelessDevicesConfigBehavior">
        </behavior>
        <behavior name="DoCommandBehavior">
          <serviceThrottling maxConcurrentCalls="1000" maxConcurrentSessions="1000" maxConcurrentInstances="1000" />
        </behavior>
        <behavior name="GetSensorsInfoBehavior">
        </behavior>
        <behavior name="UploadDataBehavior">
          <!--上传数据使用了多线程，故此出对资源信息增加了限制-->
          <serviceThrottling maxConcurrentCalls="1000" maxConcurrentSessions="1000" maxConcurrentInstances="1000" />
        </behavior>
        <behavior name="DiagnosticAnalysisBehavior">
        </behavior>
        <!--SystemInitService enable the Metadata httpGet, added by QXM-->
        <behavior name="SystemInitSetsServiceBehavior">
          <serviceMetadata httpGetEnabled="true">
          </serviceMetadata>
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="CloudBehavior">
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <extensions>
      <behaviorExtensions>
        <add name="newtonsoftJsonBehavior" type="iCMS.Common.Component.Tool.Extensions.NewtonJsonBehaviorExtensionElement,iCMS.Common.Component.Tool.Extensions" />
      </behaviorExtensions>
    </extensions>
  </system.serviceModel>
  <system.net>
    <connectionManagement>
      <!--同一链接地址最大连接数据 -->
      <add address="*" maxconnection="100">
      </add>
    </connectionManagement>
  </system.net>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>